name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REGISTRY: 986129559431.dkr.ecr.us-east-1.amazonaws.com
      ECR_REPO: my-ecs-app
      IMAGE_TAG: latest
      CLUSTER_NAME: my-cluster
      SERVICE_NAME: my-app
      TASK_DEFINITION_NAME: my-task-def

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and Push Docker image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG

      - name: Get current task definition revision
        id: get-task
        run: |
          arn=$(aws ecs describe-task-definition \
            --task-definition $TASK_DEFINITION_NAME \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          echo "::set-output name=TASK_DEF_ARN::$arn"

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --task-definition ${{ steps.get-task.outputs.TASK_DEF_ARN }} \
            --force-new-deployment
